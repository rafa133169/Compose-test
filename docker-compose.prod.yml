version: '3.8'

services:
  api:
    build: ./api
    ports:
      - "3129:3129"
    env_file: .env.production
    depends_on:
      - db
    networks:
      - tot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3129/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  landing:
    build: ./landing
    ports:
      - "13138:80"
    networks:
      - tot-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "9165:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - tot-network
    command: --default-authentication-plugin=mysql_native_password

  # Nginx reverse proxy con SSL
  nginx:
    image: nginx:alpine
    ports:
      - "18080:80"      # HTTP en puerto 18080
      - "18443:443"     # HTTPS en puerto 18443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - landing
    networks:
      - tot-network
    restart: unless-stopped

volumes:
  dbdata:

networks:
  tot-network:
    driver: bridge
